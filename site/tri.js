const a={b:undefined,run(c){const d={};d.env={...e,...f,};fetch(c).then(g=>g.arrayBuffer()).then(h=>WebAssembly.instantiate(h,d)).then(i=>{a.b=i.instance.exports;a.b.init();window.requestAnimationFrame(a.update);}).catch((j)=>console.log(j));},update(k){a.b.update();window.requestAnimationFrame(a.update);},};function run(c){a.run(c);}const l=new TextDecoder();const m={getSlice(n,o){return a.b.memory.buffer.slice(n,n+o);},getString(n,o){return l.decode(m.getSlice(n,o));},destroy(p,q){if(p==q.length-1){q.pop();}},};const r=document.title;const e={s:[null],logConsole(t,u){console.log(m.getString(t,u));},setWindowTitle(v,w){if(w>0){document.title=m.getString(v,w);}else{document.title=r;}},createCanvas(x,y){const z=document.createElement("canvas");z.width=x;z.height=y;document.body.appendChild(z);e.s.push(z);return e.s.length-1;},destroyCanvas(A){document.body.removeChild(e.s[A]);m.destroy(A,e.s);},now(){return performance.now();},};const B=0;const C=1;const D=2;const E=0;const F=0xFFFFFFFF;const G=0;const H=1;const I=2;const f={J:[null],K:[null],L:[null],M:[null],N:[null],O:[null],P:[null],Q:[null],R:[null],S:[null],T:[null],U:[null],V:[null],W:[null],X:[null],createContext(A){f.S.push({});f.J.push({Y:e.s[A].getContext("webgpu"),Z:f.S.length-1,});return f.J.length-1;},destroyContext(aa){m.destroy(f.J[aa].Z,f.S);m.destroy(aa,f.J);},getContextCurrentTexture(aa){const ab=f.J[aa];f.S[ab.Z]={Y:ab.Y.getCurrentTexture(),ac:[null],};return ab.Z;},configure(ad,aa,ae,af,ag,x,y){const ah={};ah.device=f.L[ad];ah.format=m.getString(ae,af);ah.usage=ag;ah.size=[x,y];f.J[aa].Y.configure(ah);},requestAdapter(ai,aj,ak){navigator.gpu.requestAdapter(JSON.parse(m.getString(ai,aj))).then(al=>{f.K.push(al);a.b.requestAdapterComplete(f.K.length-1,ak);}).catch((j)=>{console.log(j);a.b.runtimeError(B);});},destroyAdapter(am){m.destroy(am,f.K);},requestDevice(am,ai,aj,ak){f.K[am].requestDevice(JSON.parse(m.getString(ai,aj))).then(an=>{f.L.push(an);a.b.requestDeviceComplete(f.L.length-1,ak);}).catch((j)=>{console.log(j);a.b.runtimeError(C);});},destroyDevice(ad){m.destroy(ad,f.L);},createShader(ad,ao,ap){const ah={};ah.code=m.getString(ao,ap);f.M.push(f.L[ad].createShaderModule(ah));return f.M.length-1;},destroyShader(aq){m.destroy(aq,f.M);},checkShaderCompile(aq){const ar=f.M[aq];ar.compilationInfo().then(as=>{let j=false;for(let at=0;at<as.messages.length;++at){const au=as.messages[at];console.log("line:",au.lineNum,"col:",au.linePos,au.message);j|=au.type=="error";}if(j){a.b.runtimeError(D);}});},createBindGroupLayout(ad,ai,aj){const ah=JSON.parse(m.getString(ai,aj));f.N.push(f.L[ad].createBindGroupLayout(ah));return f.N.length-1;},destroyBindGroupLayout(av){m.destroy(av,f.N);},createBindGroup(ad,av,aw,ax,ay,az,aA,aB,aC,aD,ai,aj){const ah=JSON.parse(m.getString(ai,aj));ah.layout=f.N[av];const aE=new Uint32Array(m.getSlice(aw,ax));const aF=new Uint32Array(m.getSlice(ay,az));const aG=new Uint32Array(m.getSlice(aA,aB));const aH=new Uint32Array(m.getSlice(aC,aD));for(let at=0;at<aE.length;++at){ah.entries[at].resource={};switch(aE[at]){case G:ah.entries[at].resource.buffer=f.R[aF[at]];if(aG[at]!=0){ah.entries[at].resource.offset=aG[at];}if(aH[at]!=F){ah.entries[at].resource.size=aH[at];}break;case H:ah.entries[at].resource.sampler=f.T[aF[at]];break;case I:ah.entries[at].textureView=f.getTextureView(aF[at]);break;}}f.O.push(f.L[ad].createBindGroup(ah));return f.O.length-1;},destroyBindGroup(aI){m.destroy(aI,f.O);},createPipelineLayout(ad,aJ,aK){const aL=new Uint32Array(m.getSlice(aJ,aK));const aM=[];for(let at=0;at<aL.length;++at){aM.push(f.N[aL[at]]);}const ah={};ah.bindGroupLayouts=aM;f.P.push(f.L[ad].createPipelineLayout(ah));return f.P.length-1;},destroyPipelineLayout(aN){m.destroy(aN,f.P);},createRenderPipeline(ad,aN,aO,aP,ai,aj){const ah=JSON.parse(m.getString(ai,aj));ah.layout=f.P[aN];ah.vertex.module=f.M[aO];if(aP!=E){ah.fragment.module=f.M[aP];}f.Q.push(f.L[ad].createRenderPipeline(ah));return f.Q.length-1;},destroyRenderPipeline(aQ){m.destroy(aQ,f.Q);},createCommandEncoder(ad){f.U.push(f.L[ad].createCommandEncoder());return f.U.length-1;},finishCommandEncoder(aR){f.V.push(f.U[aR].finish());m.destroy(aR,f.U);return f.V.length-1;},beginRenderPass(aR,aS,aT,aU,aV,aW,aX,aY,aZ,ai,aj){const ah=JSON.parse(m.getString(ai,aj));const ba=new Uint32Array(m.getSlice(aS,aT));for(let at=0;at<ba.length;++at){ah.colorAttachments[at].view=f.getTextureView(ba[at]);}if(aV>0){const bb=new Uint32Array(m.getSlice(aU,aV));for(let at=0;at<bb.length;++at){ah.colorAttachments[at].resolveTarget=f.getTextureView(bb[at]);}}if(aW!=E){ah.depthStencilAttachment.view=f.getTextureView(aW);}if(aX!=E){ah.occlusionQuerySet=f.X[aX];}if(aZ>0){let bc=new Uint32Array(m.getSlice(aY,aZ));for(let at=0;at<ah.timestampWrites.length;++at){ah.timestampWrites[at].querySet=f.X[bc[at]];}}f.W.push(f.U[aR].beginRenderPass(ah));return f.W.length-1;},setPipeline(bd,be){f.W[bd].setPipeline(f.Q[be]);},setBindGroup(bd,bf,aI,bg,bh){const bi=f.O[aI];const bj=[];if(bh>0){bj=new Uint32Array(m.getSlice(bg,bh));}f.W[bd].setBindGroup(bf,bi,bj);},setVertexBuffer(bd,bk,bl,bm,bn){if((bn>>>0)===F){bn=undefined;}f.W[bd].setVertexBuffer(bk,f.R[bl],bm,bn);},setIndexBuffer(bd,bl,bo,bp,bm,bn){if((bn>>>0)===F){bn=undefined;}f.W[bd].setIndexBuffer(f.R[bl],m.getString(bo,bp),bm,bn);},draw(bd,bq,br,bs,bt){f.W[bd].draw(bq,br,bs,bt);},drawIndexed(bd,bu,br,bv,bw,bt){f.W[bd].drawIndexed(bu,br,bv,bw,bt);},endRenderPass(bd){f.W[bd].endPass();m.destroy(bd,f.W);},queueSubmit(ad,bx,by){const bz=new Uint32Array(m.getSlice(bx,by));let bA=[];for(let at=0;at<bz.length;++at){bA.push(f.V[bz[at]]);}f.L[ad].queue.submit(bA);bz.sort();for(let at=bz.length-1;at>=0;--at){m.destroy(bz[at],f.V);}},queueWriteBuffer(ad,bl,bB,bC,bD,bE){f.L[ad].queue.writeBuffer(f.R[bl],bB,new Uint8Array(m.getSlice(bC,bD)),bE,bD);},createBuffer(ad,bn,ag,bC,bD){const bF=bD>0;const ah={};ah.size=bn;ah.usage=ag;ah.mappedAtCreation=bF;const bG=f.L[ad].createBuffer(ah);if(bF){const bH=new Uint8Array(m.getSlice(bC,bD));const bI=new Uint8Array(bG.getMappedRange());bI.set(bH);bG.unmap();}f.R.push(bG);return f.R.length-1;},destroyBuffer(bl){f.R[bl].destroy();m.destroy(bl,f.R);},createTexture(ad,ag,bJ,bK,x,y,bL,ae,af,bM,bN,){const ah={};ah.usage=ag;ah.dimension=m.getString(bJ,bK);ah.size={};ah.size.width=x;ah.size.height=y;ah.size.depthOrArrayLayers=bL;ah.format=m.getString(ae,af);ah.mipLevelCount=bM;ah.sampleCount=bN;const bO=f.L[ad].createTexture(ah);f.S.push({Y:bO,ac:[null]});return f.S.length-1;},destroyTexture(bP){m.destroy(bP,f.S);},createTextureView(bP){const bO=f.S[bP];bO.ac.push(bO.Y.createView());return(bP<<16)|(bO.ac.length-1);},destroyTextureView(bQ){m.destroy(bQ&0x0000FFFF,f.S[bQ>>>16].ac);},getTextureView(bQ){return f.S[bQ>>>16].ac[bQ&0x0000FFFF];},};